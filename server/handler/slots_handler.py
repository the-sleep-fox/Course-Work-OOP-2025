import asyncio
import httpx
from aiogram import Bot
from bot_instance import bot


async def poll_slots_until_found(email, country, chat_id, cookies):
    print("üëÄ –ó–∞–ø—É—â–µ–Ω —Ü–∏–∫–ª –ø–æ–∏—Å–∫–∞ —Å–ª–æ—Ç–æ–≤...")
    while True:
        async with httpx.AsyncClient(base_url="http://127.0.0.1:8000") as client:
            r = await client.get(f"/{country}/slots", cookies=cookies)
            print("r status code: ",r.status_code)
            if r.status_code == 200:
                slots = r.json().get("slots", [])
                print(slots)
                if slots:
                    # –ë—Ä–æ–Ω–∏—Ä—É–µ–º –∏ –≤—ã—Ö–æ–¥–∏–º
                    first = slots[0]
                    try:
                        book = await client.post("/select_slot", json={
                            "email": email,
                            "country": country,
                            "date": first["date"],
                            "time": first["time"],
                        }, cookies=cookies)
                        print("book status: ",book.status_code)
                    except httpx.ReadTimeout:
                        print("‚è≥ –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–ª–æ—Ç–∞. –ü–æ–≤—Ç–æ—Ä—è–µ–º...")
                        try:
                            await bot.send_message(chat_id, text="–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏. –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø–æ–∏—Å–∫...")
                        except Exception as e:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                        await asyncio.sleep(60)
                        continue
                    except httpx.HTTPError as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ HTTP –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
                        try:
                            await bot.send_message(chat_id, text=f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}. –ü–æ–≤—Ç–æ—Ä—è–µ–º...")
                        except Exception as e:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                        await asyncio.sleep(60)
                        continue
                    if book.status_code == 200:
                        print("–°–ª–æ—Ç –Ω–∞—à—ë–ª—Å—è: ", first["date"], first["time"])
                        await bot.send_message(chat_id, text=f"–°–ª–æ—Ç –Ω–∞–π–¥–µ–Ω –∏ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω: {first["date"]} {first["time"]}")
                        return
                    else:
                        try:
                            print(" –º—ã –∑–¥–µ—Å—å –ø–æ—Ç–æ–º—É —á—Ç–æ –µ—â—ë –∏—â–µ–º —Å–ª–æ—Ç—ã...–≤–Ω—É—Ç—Ä–∏  try")
                            await bot.send_message(chat_id=chat_id, text ="–°–ª–æ—Ç –Ω–∞–π–¥–µ–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å. –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø–æ–∏—Å–∫... –≤—É–Ω—Ç—Ä–∏ try")
                        except Exception as e:
                            print(" —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å –≤ —á–∞—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º..")
                            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

                else:
                    print(" –º—ã –∑–¥–µ—Å—å –ø–æ—Ç–æ–º—É —á—Ç–æ –µ—â—ë –∏—â–µ–º —Å–ª–æ—Ç—ã...")
                    await bot.send_message(chat_id=chat_id, text="–º—ã –∑–¥–µ—Å—å –ø–æ—Ç–æ–º—É —á—Ç–æ –µ—â—ë –∏—â–µ–º —Å–ª–æ—Ç—ã...")


        await asyncio.sleep(60)
